{"ast":null,"code":"var _jsxFileName = \"d:\\\\DOCUMENTS\\\\NodeJS\\\\GraphQL\\\\client\\\\src\\\\components\\\\AddBook.js\";\nimport React, { Component } from 'react';\nimport { compose, graphql } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n  }\n\n  displayAuthors() {\n    var data = this.props.getAuthorsQuery;\n\n    if (data.loading) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"LoadingAuthors...\");\n    } else {\n      return data.authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          name = _this$state.name,\n          genre = _this$state.genre,\n          state = _this$state.state;\n    this.props.addBookMutation({\n      variables: {\n        name,\n        genre,\n        authorId\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Book name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Genre:\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Author:\"), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Select Author\"), this.displayAuthors())), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n}\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["d:\\DOCUMENTS\\NodeJS\\GraphQL\\client\\src\\components\\AddBook.js"],"names":["React","Component","compose","graphql","getAuthorsQuery","addBookMutation","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","variables","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { compose, graphql } from 'react-apollo'\r\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\r\n\r\nclass AddBook extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            name: '',\r\n            genre: '',\r\n            authorId: ''\r\n        }\r\n    }\r\n\r\n    displayAuthors() {\r\n        var data = this.props.getAuthorsQuery;\r\n        if (data.loading) {\r\n            return(<option disabled>LoadingAuthors...</option>)\r\n        } else {\r\n            return data.authors.map(author => {\r\n                return (<option key={ author.id } value={author.id}>{author.name}</option>)\r\n            })\r\n        }\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault()\r\n        const {name, genre, state} = this.state\r\n        this.props.addBookMutation({\r\n            variables: {\r\n                name,\r\n                genre,\r\n                authorId\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <form id=\"add-book\" onSubmit={this.submitForm.bind(this)}>\r\n                <div className=\"field\">\r\n                    <label>Book name:</label>\r\n                    <input type=\"text\" onChange={ (e) => this.setState({name: e.target.value})}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Genre:</label>\r\n                    <input type=\"text\" onChange={ (e) => this.setState({genre: e.target.value})}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Author:</label>\r\n                    <select onChange={ (e) => this.setState({authorId: e.target.value})}>\r\n                        <option>Select Author</option>\r\n                        { this.displayAuthors() }\r\n                    </select>\r\n                </div>\r\n                <button>+</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(getAuthorsQuery, {name: \"getAuthorsQuery\"}),\r\n    graphql(addBookMutation, {name: \"addBookMutation\"})\r\n)(AddBook)"]},"metadata":{},"sourceType":"module"}