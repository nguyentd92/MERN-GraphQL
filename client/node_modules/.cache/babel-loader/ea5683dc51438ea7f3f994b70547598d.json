{"ast":null,"code":"var _jsxFileName = \"d:\\\\DOCUMENTS\\\\NodeJS\\\\GraphQL\\\\client\\\\src\\\\components\\\\BookDetails.js\";\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n  displayBookDetails() {\n    const book = this.props.data.book;\n\n    if (book) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, book.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, book.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, book.author.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"All books by this author:\"), React.createElement(\"ul\", {\n        className: \"other-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, book.author.books.map(e => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, e.name);\n      })));\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      id: \"book-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Book Detail\"));\n  }\n\n}\n\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["d:\\DOCUMENTS\\NodeJS\\GraphQL\\client\\src\\components\\BookDetails.js"],"names":["React","Component","graphql","getBookQuery","BookDetails","displayBookDetails","book","props","data","name","genre","author","books","map","e","item","id","render","console","log","options","variables","bookId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,kBAAkB,GAAG;AAAA,UACZC,IADY,GACJ,KAAKC,KAAL,CAAWC,IADP,CACZF,IADY;;AAEnB,QAAIA,IAAJ,EAAU;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACG,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAI,CAACI,KAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACK,MAAL,CAAYF,IAAhB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJF,EAKE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,CAAC,IAAI;AAC1B,eAAO;AAAI,UAAA,GAAG,EAAEC,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJF,CAAC,CAACL,IADE,CAAP;AAGD,OAJA,CADH,CALF,CADF;AAeD;AACF;;AACDQ,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,WACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAOD;;AA9BiC;;AAiCpC,eAAeL,OAAO,CAACC,YAAD,EAAe;AACnCiB,EAAAA,OAAO,EAAGb,KAAD,IAAS;AAChB,WAAO;AACLc,MAAAA,SAAS,EAAE;AACTL,QAAAA,EAAE,EAAET,KAAK,CAACe;AADD;AADN,KAAP;AAKD;AAPkC,CAAf,CAAP,CAQZlB,WARY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { getBookQuery } from '../queries/queries'\r\n\r\nclass BookDetails extends Component {\r\n  displayBookDetails() {\r\n    const {book} = this.props.data\r\n    if (book) {\r\n      return(\r\n        <div>\r\n          <h2>{book.name}</h2>\r\n          <p>{book.genre}</p>\r\n          <p>{book.author.name}</p>\r\n          <p>All books by this author:</p>\r\n          <ul className=\"other-books\">\r\n            {book.author.books.map(e => {\r\n              return <li key={item.id}>\r\n                {e.name}\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div id=\"book-detail\">\r\n        <p>\r\n          Book Detail\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n  options: (props)=>{\r\n    return {\r\n      variables: {\r\n        id: props.bookId\r\n      }\r\n    }\r\n  }\r\n})(BookDetails)"]},"metadata":{},"sourceType":"module"}