{"ast":null,"code":"var _jsxFileName = \"d:\\\\DOCUMENTS\\\\NodeJS\\\\GraphQL\\\\client\\\\src\\\\components\\\\BookList.js\";\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBooksQuery } from \"../queries/queries\"; // Component\n\nimport BookDetails from \"./BookDetails\";\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Loading books...\");\n    } else {\n      return data.books.map(book => {\n        return React.createElement(\"li\", {\n          key: book.id,\n          onClick: e => {\n            this.setState({\n              selected: book.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"book-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.displayBooks()), React.createElement(BookDetails, {\n      bookId: this.state.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["d:\\DOCUMENTS\\NodeJS\\GraphQL\\client\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetails","BookList","constructor","props","state","selected","displayBooks","data","loading","books","map","book","id","e","setState","name","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAX;AAGD;;AACDC,EAAAA,YAAY,GAAG;AACb,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB;;AACA,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,KAFD,MAEO;AACL,aAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC5B,eACE;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,UAAA,OAAO,EAAEC,CAAC,IAAI;AAAC,iBAAKC,QAAL,CAAc;AAACT,cAAAA,QAAQ,EAAEM,IAAI,CAACC;AAAhB,aAAd;AAAmC,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACI,IADR,CADF;AAKD,OANM,CAAP;AAOD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAKG,YAAL,EAApB,CADF,EAEE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA9B8B;;AAiCjC,eAAeP,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { getBooksQuery } from \"../queries/queries\";\r\n\r\n// Component\r\nimport BookDetails from \"./BookDetails\";\r\n\r\nclass BookList extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state={\r\n      selected: null\r\n    }\r\n  }\r\n  displayBooks() {\r\n    var data = this.props.data;\r\n    if (data.loading) {\r\n      return <div>Loading books...</div>;\r\n    } else {\r\n      return data.books.map(book => {\r\n        return (\r\n          <li key={book.id} onClick={e => {this.setState({selected: book.id})}}>\r\n            {book.name}\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <ul id=\"book-list\">{this.displayBooks()}</ul>\r\n        <BookDetails bookId={this.state.selected}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}